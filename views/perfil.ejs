<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Perfil de Usuario</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { background-color: #f4f6f8; }
    .card { border-radius: 12px; }
    .profile-header { background-color: #343a40; color: white; padding: 1rem; text-align: center; border-top-left-radius: 12px; border-top-right-radius: 12px; }
    .profile-section { margin-bottom: 2rem; }
    .productos-grid {display: grid; 
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr)); 
  gap: 1rem; 
  /* eliminar overflow fijo para que crezca con el contenido */
  overflow-y: visible; }
    .producto-card { transition: transform 0.2s; }
    .producto-card:hover { transform: translateY(-5px); }
    .btn-floating { position: fixed; bottom: 20px; right: 20px; border-radius: 50%; font-size: 1.5rem; width: 60px; height: 60px; }
    .card-body { display: flex; flex-direction: column; justify-content: space-between; }
  </style>
</head>
<body>

  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow">
    <div class="container-fluid">
      <a class="navbar-brand" href="/">Mi Tienda</a>
      <div class="d-flex">
        <a href="/" class="btn btn-outline-light me-2">Inicio</a>
        <button id="logoutBtn" class="btn btn-danger">Cerrar Sesión</button>
      </div>
    </div>
  </nav>

  <main class="container my-5">
    <div class="row g-4">
      
      <!-- Perfil Usuario -->
      <div class="col-lg-4 col-md-6 profile-section">
        <div class="card shadow-lg">
          <div class="profile-header">
            <h3>Mi Perfil</h3>
          </div>
          <div class="card-body">
            <div id="mensaje" class="alert d-none text-center" role="alert"></div>
            <form id="form-profile">
              <div class="mb-3">
                <label for="nombre" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="nombre" name="nombre" required>
              </div>
              <div class="mb-3">
                <label for="correo" class="form-label">Correo electrónico</label>
                <input type="email" class="form-control" id="correo" name="correo" required>
              </div>
              <div class="mb-3">
                <label for="contraseña" class="form-label">Contraseña</label>
                <input type="password" class="form-control" id="contraseña" name="contraseña" required>
              </div>
              <div class="mb-3">
                <label for="telefono" class="form-label">Teléfono</label>
                <input type="text" class="form-control" id="telefono" name="telefono" required>
              </div>
              <div class="mb-3">
                <label for="direccion" class="form-label">Dirección</label>
                <input type="text" class="form-control" id="direccion" name="direccion">
              </div>
              <button type="submit" class="btn btn-primary w-100 mb-2">Actualizar Perfil</button>
              <button type="button" id="deleteUserBtn" class="btn btn-danger w-100">Borrar Usuario</button>
            </form>
          </div>
        </div>
      </div>

      <!-- Productos -->
      <div class="col-lg-8 col-md-6 profile-section">
        <div class="card shadow-lg">
          <div class="profile-header d-flex justify-content-between align-items-center">
            <h3>Mis Productos</h3>
            <button class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#addProductModal">Agregar</button>
          </div>
          <div class="card-body">
            <div id="productosList" class="productos-grid">
              <!-- Productos se cargan aquí -->
            </div>
          </div>
        </div>
      </div>

    </div>
  </main>

  <!-- Modal Agregar Producto -->
  <div class="modal fade" id="addProductModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Agregar Nuevo Producto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="form-add-product">
            <div class="mb-3">
              <label class="form-label">Título</label>
              <input type="text" class="form-control" name="titulo" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Descripción</label>
              <textarea class="form-control" name="descripcion" rows="3" required></textarea>
            </div>
            <div class="mb-3">
              <label class="form-label">Categoría</label>
              <input type="text" class="form-control" name="categoria" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Precio</label>
              <input type="number" class="form-control" name="precio" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Imagen URL</label>
              <input type="text" class="form-control" name="imagen">
            </div>
            <button type="submit" class="btn btn-success w-100">Agregar Producto</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Modal Actualizar Producto -->
  <div class="modal fade" id="updateProductModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Actualizar Producto</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <form id="form-update-product">
            <input type="hidden" name="id" id="updateProductId">
            <div class="mb-3">
              <label class="form-label">Título</label>
              <input type="text" class="form-control" name="titulo" id="updateTitulo" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Descripción</label>
              <textarea class="form-control" name="descripcion" id="updateDescripcion" rows="3" required></textarea>
            </div>
            <div class="mb-3">
              <label class="form-label">Categoría</label>
              <input type="text" class="form-control" name="categoria" id="updateCategoria" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Precio</label>
              <input type="number" class="form-control" name="precio" id="updatePrecio" required>
            </div>
            <div class="mb-3">
              <label class="form-label">Imagen URL</label>
              <input type="text" class="form-control" name="imagen" id="updateImagen">
            </div>
            <button type="submit" class="btn btn-warning w-100">Actualizar Producto</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const formProfile = document.getElementById("form-profile");
    const formAddProduct = document.getElementById("form-add-product");
    const formUpdateProduct = document.getElementById("form-update-product");
    const mensaje = document.getElementById("mensaje");
    const logoutBtn = document.getElementById("logoutBtn");
    const productosList = document.getElementById("productosList");
    const deleteUserBtn = document.getElementById("deleteUserBtn");
    const token = localStorage.getItem("token");

    if(!token) window.location.href = "/login";

    let currentUserId = "";

    function showMessage(msg, type="success") {
      mensaje.textContent = msg;
      mensaje.className = `alert alert-${type} text-center`;
      mensaje.classList.remove("d-none");
      setTimeout(() => mensaje.classList.add("d-none"), 4000);
    }

    async function loadProfile() {
      try {
        const res = await fetch("/api/usuarios/me", { headers: { "Authorization": "Bearer " + token } });
        const json = await res.json();
        if(json.state) {
          const user = json.usuario;
          currentUserId = user._id;
          formProfile.nombre.value = user.nombre;
          formProfile.correo.value = user.correo;
          formProfile.contraseña.value = user.contraseña;
          formProfile.telefono.value = user.telefono;
          formProfile.direccion.value = user.direccion;
          loadProducts(currentUserId);
        } else showMessage("⚠️ " + (json.error || "Error al cargar perfil."), "danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    }

   async function loadProducts(usuarioId) {
  const res = await fetch("/api/productos", { headers: { "Authorization": "Bearer " + token } });
  const json = await res.json();
  productosList.innerHTML = "";
  if(json.state){
    const userProducts = json.productos.filter(p => p.usuarioId?._id === usuarioId)
    if(userProducts.length === 0) productosList.innerHTML = '<p class="text-center">No has publicado productos aún.</p>';
    userProducts.forEach(p => {
      productosList.innerHTML += `
        <div class="card producto-card shadow-sm">
          <img src="${p.imagen || 'https://via.placeholder.com/200'}" class="card-img-top" alt="${p.titulo}">
          <div class="card-body">
            <h5 class="card-title">${p.titulo}</h5>
            <p class="card-text">${p.descripcion}</p>
            <p class="text-primary fw-bold">Precio: $${p.precio}</p>
            <div class="d-flex justify-content-between mt-3">
              <button class="btn btn-sm btn-warning" onclick="updateProduct('${p._id}')">Actualizar</button>
              <button class="btn btn-sm btn-danger" onclick="deleteProduct('${p._id}')">Borrar</button>
            </div>
          </div>
        </div>
      `;
    });
  } else productosList.innerHTML = '<p class="text-center text-danger">Error al cargar productos.</p>';
}


    formProfile.addEventListener("submit", async e => {
      e.preventDefault();
      const data = {
        nombre: formProfile.nombre.value,
        correo: formProfile.correo.value,
        contraseña: formProfile.contraseña.value,
        telefono: formProfile.telefono.value,
        direccion: formProfile.direccion.value
      };
      try {
        const res = await fetch("/api/usuarios/me", {
          method: "PUT",
          headers: { "Content-Type": "application/json", "Authorization": "Bearer " + token },
          body: JSON.stringify(data)
        });
        const json = await res.json();
        showMessage(json.state ? "✅ Perfil actualizado correctamente!" : "⚠️ " + (json.error || "Error al actualizar perfil."), json.state ? "success":"danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    });

    deleteUserBtn.addEventListener("click", async () => {
      if(!confirm("¿Seguro que quieres borrar tu usuario?")) return;
      try {
        const res = await fetch(`/api/usuarios/me`, { method:"DELETE", headers:{ "Authorization":"Bearer "+token } });
        const json = await res.json();
        if(json.state){
          alert("Usuario eliminado correctamente.");
          localStorage.removeItem("token");
          window.location.href="/login";
        } else { showMessage("⚠️ " + (json.error||"Error al borrar usuario."), "danger"); }
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    });

    formAddProduct.addEventListener("submit", async e => {
      e.preventDefault();
      const data = { ...Object.fromEntries(new FormData(formAddProduct).entries()), usuarioId: currentUserId };
      try {
        const res = await fetch("/api/productos", {
          method: "POST",
          headers:{ "Content-Type":"application/json", "Authorization":"Bearer "+token },
          body: JSON.stringify(data)
        });
        const json = await res.json();
        if(json.state){
          loadProducts(currentUserId);
          const modal = bootstrap.Modal.getInstance(document.getElementById('addProductModal'));
          modal.hide();
          formAddProduct.reset();
          showMessage("✅ Producto agregado!", "success");
        } else showMessage("⚠️ "+(json.error||"Error al agregar producto"),"danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    });

    async function deleteProduct(id){
      if(!confirm("¿Seguro que quieres borrar este producto?")) return;
      try{
        const res = await fetch(`/api/productos/${id}`, { method:"DELETE", headers:{ "Authorization":"Bearer "+token } });
        const json = await res.json();
        if(json.state) loadProducts(currentUserId);
        else showMessage("⚠️ "+(json.error||"Error al borrar producto"),"danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    }

    async function updateProduct(id){
      try {
        const res = await fetch(`/api/productos/${id}`, { headers: { "Authorization": "Bearer " + token } });
        const json = await res.json();
        if(json.state){
          const p = json.producto;
          document.getElementById("updateProductId").value = p._id;
          document.getElementById("updateTitulo").value = p.titulo;
          document.getElementById("updateDescripcion").value = p.descripcion;
          document.getElementById("updateCategoria").value = p.categoria;
          document.getElementById("updatePrecio").value = p.precio;
          document.getElementById("updateImagen").value = p.imagen;
          const modal = new bootstrap.Modal(document.getElementById('updateProductModal'));
          modal.show();
        } else showMessage("⚠️ Error al cargar producto", "danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    }

    formUpdateProduct.addEventListener("submit", async e => {
      e.preventDefault();
      const id = document.getElementById("updateProductId").value;
      const data = {
        titulo: document.getElementById("updateTitulo").value,
        descripcion: document.getElementById("updateDescripcion").value,
        categoria: document.getElementById("updateCategoria").value,
        precio: document.getElementById("updatePrecio").value,
        imagen: document.getElementById("updateImagen").value
      };
      try {
        const res = await fetch(`/api/productos/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json", "Authorization": "Bearer " + token },
          body: JSON.stringify(data)
        });
        const json = await res.json();
        if(json.state){
          loadProducts(currentUserId);
          const modal = bootstrap.Modal.getInstance(document.getElementById('updateProductModal'));
          modal.hide();
          showMessage("✅ Producto actualizado!", "success");
        } else showMessage("⚠️ "+(json.error||"Error al actualizar producto"),"danger");
      } catch(err){ showMessage("⚠️ Error de conexión con el servidor.", "danger"); }
    });

    logoutBtn.addEventListener("click", ()=>{ localStorage.removeItem("token"); window.location.href="/login"; });
    loadProfile();
  </script>

</body>
</html>
